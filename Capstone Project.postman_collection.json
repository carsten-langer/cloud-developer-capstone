{
	"info": {
		"_postman_id": "bb231e2b-7ef0-4ce4-b6ae-16c630ce36b3",
		"name": "Udacity Cloud Developer Capstone Project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Recipes",
			"item": [
				{
					"name": "Get all recipe items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
									"    \"type\": \"object\",\r",
									"    \"required\": [\r",
									"        \"recipes\"\r",
									"    ],\r",
									"    \"additionalProperties\": false,\r",
									"    \"properties\": {\r",
									"        \"recipes\": {\r",
									"            \"type\": \"array\",\r",
									"            \"items\": {\r",
									"                \"type\": \"object\",\r",
									"                \"required\": [\r",
									"                    \"userId\",\r",
									"                    \"recipeId\",\r",
									"                    \"name\",\r",
									"                    \"recipe\"\r",
									"                ],\r",
									"                \"additionalProperties\": false,\r",
									"                \"properties\": {\r",
									"                    \"userId\": {\r",
									"                        \"type\": \"string\",\r",
									"                    },\r",
									"                    \"recipeId\": {\r",
									"                        \"type\": \"string\",\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                        \"type\": \"string\",\r",
									"                    },\r",
									"                    \"recipe\": {\r",
									"                        \"type\": \"string\",\r",
									"                    },\r",
									"                    \"attachmentUrl\": {\r",
									"                        \"type\": \"string\",\r",
									"                    }\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"     pm.response.to.have.jsonSchema(schema)\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{apiId}}.execute-api.{{region}}.amazonaws.com/dev/recipes",
							"protocol": "https",
							"host": [
								"{{apiId}}",
								"execute-api",
								"{{region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"dev",
								"recipes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create recipe item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
									"    \"type\": \"object\",\r",
									"    \"required\": [\r",
									"        \"userId\",\r",
									"        \"recipeId\",\r",
									"        \"name\",\r",
									"        \"recipe\"\r",
									"    ],\r",
									"    \"additionalProperties\": false,\r",
									"    \"properties\": {\r",
									"        \"userId\": {\r",
									"            \"type\": \"string\",\r",
									"        },\r",
									"        \"recipeId\": {\r",
									"            \"type\": \"string\",\r",
									"        },\r",
									"        \"name\": {\r",
									"            \"type\": \"string\",\r",
									"        },\r",
									"        \"recipe\": {\r",
									"            \"type\": \"string\",\r",
									"        },\r",
									"        \"attachments\": {\r",
									"            \"type\": \"string\"\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"     pm.response.to.have.jsonSchema(schema)\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"My famous soup\",\n\t\"recipe\": \"Ingredients: ...\"\n}"
						},
						"url": {
							"raw": "https://{{apiId}}.execute-api.{{region}}.amazonaws.com/dev/recipes",
							"protocol": "https",
							"host": [
								"{{apiId}}",
								"execute-api",
								"{{region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"dev",
								"recipes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create recipe item - malformed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400)\r",
									"})\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.message).to.eql(\"Invalid request body\")\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"\",\n\t\"recipe\": \"empty name will not be accepted\"\n}"
						},
						"url": {
							"raw": "https://{{apiId}}.execute-api.{{region}}.amazonaws.com/dev/recipes",
							"protocol": "https",
							"host": [
								"{{apiId}}",
								"execute-api",
								"{{region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"dev",
								"recipes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update recipe item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"My famous desert\",\n\t\"recipe\": \"For this delicious desert you take ...\"\n}"
						},
						"url": {
							"raw": "https://{{apiId}}.execute-api.{{region}}.amazonaws.com/dev/recipes/918087f7-b4e0-41e4-b9e7-7db15bf844a8",
							"protocol": "https",
							"host": [
								"{{apiId}}",
								"execute-api",
								"{{region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"dev",
								"recipes",
								"918087f7-b4e0-41e4-b9e7-7db15bf844a8"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update recipe item - malformed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400)\r",
									"})\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.message).to.eql(\"Invalid request body\")\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"wrong recipe name makes reqeust fail\",\n\t\"recipe_wrong\": \"wrong recipe name makes reqeust fail\"\n}"
						},
						"url": {
							"raw": "https://{{apiId}}.execute-api.{{region}}.amazonaws.com/dev/recipes/918087f7-b4e0-41e4-b9e7-7db15bf844a8",
							"protocol": "https",
							"host": [
								"{{apiId}}",
								"execute-api",
								"{{region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"dev",
								"recipes",
								"918087f7-b4e0-41e4-b9e7-7db15bf844a8"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete recipe",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{apiId}}.execute-api.{{region}}.amazonaws.com/dev/recipes/<recipe_id>",
							"protocol": "https",
							"host": [
								"{{apiId}}",
								"execute-api",
								"{{region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"dev",
								"recipes",
								"<recipe_id>"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create recipe Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
									"    \"type\": \"object\",\r",
									"    \"required\": [\r",
									"        \"userId\",\r",
									"        \"recipeId\",\r",
									"        \"name\",\r",
									"        \"recipe\"\r",
									"    ],\r",
									"    \"additionalProperties\": false,\r",
									"    \"properties\": {\r",
									"        \"userId\": {\r",
									"            \"type\": \"string\",\r",
									"        },\r",
									"        \"recipeId\": {\r",
									"            \"type\": \"string\",\r",
									"        },\r",
									"        \"name\": {\r",
									"            \"type\": \"string\",\r",
									"        },\r",
									"        \"recipe\": {\r",
									"            \"type\": \"string\",\r",
									"        },\r",
									"        \"attachments\": {\r",
									"            \"type\": \"string\"\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"     pm.response.to.have.jsonSchema(schema)\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"My famous soup\",\n\t\"recipe\": \"Ingredients: ...\"\n}"
						},
						"url": {
							"raw": "https://{{apiId}}.execute-api.{{region}}.amazonaws.com/dev/recipes",
							"protocol": "https",
							"host": [
								"{{apiId}}",
								"execute-api",
								"{{region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"dev",
								"recipes"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Attachments",
			"item": [
				{
					"name": "Get attachment URL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
									"    \"type\": \"object\",\r",
									"    \"required\": [\r",
									"        \"attachmentUploadUrl\",\r",
									"        \"attachmentDownloadUrl\"\r",
									"    ],\r",
									"    \"additionalProperties\": false,\r",
									"    \"properties\": {\r",
									"        \"attachmentUploadUrl\": {\r",
									"            \"type\": \"string\",\r",
									"        },\r",
									"        \"attachmentDownloadUrl\": {\r",
									"            \"type\": \"string\",\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"     pm.response.to.have.jsonSchema(schema)\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{apiId}}.execute-api.{{region}}.amazonaws.com/dev/recipes/5e525ed3-34d0-4629-8e4b-9d4484cac08a/attachment",
							"protocol": "https",
							"host": [
								"{{apiId}}",
								"execute-api",
								"{{region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"dev",
								"recipes",
								"5e525ed3-34d0-4629-8e4b-9d4484cac08a",
								"attachment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload attachment",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "fobar"
						},
						"url": {
							"raw": "https://recipe-attachments-bucket-dev.s3.eu-central-1.amazonaws.com/github%7C11295060/5e525ed3-34d0-4629-8e4b-9d4484cac08a?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAXP7ACZJJLRBQOLNC%2F20210222%2Feu-central-1%2Fs3%2Faws4_request&X-Amz-Date=20210222T173155Z&X-Amz-Expires=300&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENL%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaDGV1LWNlbnRyYWwtMSJHMEUCIQDu%2B5speXj%2Fog8StdHkrdaj%2Fr%2FoOjZB0OIKtyQpar5SqgIgDeAAEX6JajYCoVDySqWJgS8QwWfkIqIX3zwIcTx6GnUq8wEI2%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARABGgw1MTUzMjkxNDk1MjIiDIVwnVxHgft2xAt%2BvSrHAecK8wKRMZuAil578%2BttvEPs2X0jEQxIIt%2Fk%2BmCm4%2FITy%2B3sFcC8d3YWdiBnrISfIj9e%2BwxfawoKF3%2FuMJdCTDnkKn6TMc7OKY3n%2B8XWlWKlWWempE2UPxkx9HFBx8c5B0YdvatwYKd3kBfjONkqVKjRnFgivrrEUasumBbVbZVXTjYUDw4quxOAqZ0jd%2BTTxZ90U%2F6JmK15l%2FD6NAGf3VxoTBfLmPsCty%2FDajeqqWAZ2qO%2F%2FgELSWR5t8fySvQGUlv4GD%2BoCZIwhtTPgQY64AG3uE6%2FHfxM0Reav0pqytreyiFvkh9rp2lTv9sqq6r25Heb9xc5nNco5prww3N6SOR2C3uvLiovKNPjOG%2BLXw3tpLXHOf9vFhIpHZMN8wElfwtYiFecYwYaGVzU0RXBhKNTk6v%2F4FcRXOY0OJzPAOCc8wV7Kp3fkDYiCb8V1noklgd3shCRMr3jqCaaiAH0XbnQgxzQvvqoUtwIrVNeI4PhntcA8zRnDb8%2Fa%2BVKmT0eXOmZh8rsZKnvIi5awasP4bPSOqlXDTIferwo%2FzSkXv7%2BrzlCjHvvoxx7edjjpOQyVQ%3D%3D&X-Amz-Signature=83bb193dbb3d975a543eeeb6a07b38758d4cef880a5e98484eb35c1c00d1bcab&X-Amz-SignedHeaders=host",
							"protocol": "https",
							"host": [
								"recipe-attachments-bucket-dev",
								"s3",
								"eu-central-1",
								"amazonaws",
								"com"
							],
							"path": [
								"github%7C11295060",
								"5e525ed3-34d0-4629-8e4b-9d4484cac08a"
							],
							"query": [
								{
									"key": "X-Amz-Algorithm",
									"value": "AWS4-HMAC-SHA256"
								},
								{
									"key": "X-Amz-Credential",
									"value": "ASIAXP7ACZJJLRBQOLNC%2F20210222%2Feu-central-1%2Fs3%2Faws4_request"
								},
								{
									"key": "X-Amz-Date",
									"value": "20210222T173155Z"
								},
								{
									"key": "X-Amz-Expires",
									"value": "300"
								},
								{
									"key": "X-Amz-Security-Token",
									"value": "IQoJb3JpZ2luX2VjENL%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaDGV1LWNlbnRyYWwtMSJHMEUCIQDu%2B5speXj%2Fog8StdHkrdaj%2Fr%2FoOjZB0OIKtyQpar5SqgIgDeAAEX6JajYCoVDySqWJgS8QwWfkIqIX3zwIcTx6GnUq8wEI2%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARABGgw1MTUzMjkxNDk1MjIiDIVwnVxHgft2xAt%2BvSrHAecK8wKRMZuAil578%2BttvEPs2X0jEQxIIt%2Fk%2BmCm4%2FITy%2B3sFcC8d3YWdiBnrISfIj9e%2BwxfawoKF3%2FuMJdCTDnkKn6TMc7OKY3n%2B8XWlWKlWWempE2UPxkx9HFBx8c5B0YdvatwYKd3kBfjONkqVKjRnFgivrrEUasumBbVbZVXTjYUDw4quxOAqZ0jd%2BTTxZ90U%2F6JmK15l%2FD6NAGf3VxoTBfLmPsCty%2FDajeqqWAZ2qO%2F%2FgELSWR5t8fySvQGUlv4GD%2BoCZIwhtTPgQY64AG3uE6%2FHfxM0Reav0pqytreyiFvkh9rp2lTv9sqq6r25Heb9xc5nNco5prww3N6SOR2C3uvLiovKNPjOG%2BLXw3tpLXHOf9vFhIpHZMN8wElfwtYiFecYwYaGVzU0RXBhKNTk6v%2F4FcRXOY0OJzPAOCc8wV7Kp3fkDYiCb8V1noklgd3shCRMr3jqCaaiAH0XbnQgxzQvvqoUtwIrVNeI4PhntcA8zRnDb8%2Fa%2BVKmT0eXOmZh8rsZKnvIi5awasP4bPSOqlXDTIferwo%2FzSkXv7%2BrzlCjHvvoxx7edjjpOQyVQ%3D%3D"
								},
								{
									"key": "X-Amz-Signature",
									"value": "83bb193dbb3d975a543eeeb6a07b38758d4cef880a5e98484eb35c1c00d1bcab"
								},
								{
									"key": "X-Amz-SignedHeaders",
									"value": "host"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "state",
				"value": "05uraslkdnmvpod",
				"type": "string"
			},
			{
				"key": "client_authentication",
				"value": "body",
				"type": "string"
			},
			{
				"key": "scope",
				"value": "openid profile email",
				"type": "string"
			},
			{
				"key": "clientSecret",
				"value": "{{auth0_client_secret}}",
				"type": "string"
			},
			{
				"key": "clientId",
				"value": "{{auth0_client_id}}",
				"type": "string"
			},
			{
				"key": "accessTokenUrl",
				"value": "https://{{auth0_domain}}/oauth/token",
				"type": "string"
			},
			{
				"key": "authUrl",
				"value": "https://{{auth0_domain}}/authorize?audience={{auth0_audience}}",
				"type": "string"
			},
			{
				"key": "redirect_uri",
				"value": "https://www.getpostman.com/oauth2/callback",
				"type": "string"
			},
			{
				"key": "tokenName",
				"value": "Some token name",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "apiId",
			"value": "nrrq2bc855"
		},
		{
			"key": "region",
			"value": "eu-central-1"
		},
		{
			"key": "auth0_domain",
			"value": "dev-birnqkz4.eu.auth0.com"
		},
		{
			"key": "auth0_client_id",
			"value": "",
			"disabled": true
		},
		{
			"key": "auth0_client_secret",
			"value": "",
			"disabled": true
		},
		{
			"key": "auth0_audience",
			"value": "https://udacity-recipe-api/"
		}
	]
}